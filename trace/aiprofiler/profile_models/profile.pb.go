// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: profile.proto

package profile_models

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
import encoding_binary "encoding/binary"

import io "io"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type ProfileInfo struct {
	UploadInfo *UploadInfo `protobuf:"bytes,1,req,name=upload_info,json=uploadInfo" json:"upload_info,omitempty"`
	Data       []byte      `protobuf:"bytes,100,req,name=data" json:"data"`
	MultiData  [][]byte    `protobuf:"bytes,101,rep,name=multi_data,json=multiData" json:"multi_data,omitempty"`
}

func (m *ProfileInfo) Reset()         { *m = ProfileInfo{} }
func (m *ProfileInfo) String() string { return proto.CompactTextString(m) }
func (*ProfileInfo) ProtoMessage()    {}
func (*ProfileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_bd3c6b70221d1fe2, []int{0}
}
func (m *ProfileInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ProfileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ProfileInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *ProfileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfileInfo.Merge(dst, src)
}
func (m *ProfileInfo) XXX_Size() int {
	return m.Size()
}
func (m *ProfileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProfileInfo proto.InternalMessageInfo

func (m *ProfileInfo) GetUploadInfo() *UploadInfo {
	if m != nil {
		return m.UploadInfo
	}
	return nil
}

func (m *ProfileInfo) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ProfileInfo) GetMultiData() [][]byte {
	if m != nil {
		return m.MultiData
	}
	return nil
}

type DataWrapper struct {
	Data         []byte `protobuf:"bytes,1,req,name=data" json:"data"`
	ProfileType  string `protobuf:"bytes,2,req,name=profile_type,json=profileType" json:"profile_type"`
	SampleMethod string `protobuf:"bytes,3,req,name=sample_method,json=sampleMethod" json:"sample_method"`
}

func (m *DataWrapper) Reset()         { *m = DataWrapper{} }
func (m *DataWrapper) String() string { return proto.CompactTextString(m) }
func (*DataWrapper) ProtoMessage()    {}
func (*DataWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_bd3c6b70221d1fe2, []int{1}
}
func (m *DataWrapper) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DataWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DataWrapper.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *DataWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataWrapper.Merge(dst, src)
}
func (m *DataWrapper) XXX_Size() int {
	return m.Size()
}
func (m *DataWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_DataWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_DataWrapper proto.InternalMessageInfo

func (m *DataWrapper) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *DataWrapper) GetProfileType() string {
	if m != nil {
		return m.ProfileType
	}
	return ""
}

func (m *DataWrapper) GetSampleMethod() string {
	if m != nil {
		return m.SampleMethod
	}
	return ""
}

type UploadInfo struct {
	AppId                string  `protobuf:"bytes,1,req,name=app_id,json=appId" json:"app_id"`
	ProfileId            int64   `protobuf:"varint,2,req,name=profile_id,json=profileId" json:"profile_id"`
	UploadId             string  `protobuf:"bytes,3,req,name=upload_id,json=uploadId" json:"upload_id"`
	Hostname             string  `protobuf:"bytes,4,opt,name=hostname" json:"hostname"`
	ContainerId          string  `protobuf:"bytes,5,opt,name=container_id,json=containerId" json:"container_id"`
	InstanceId           string  `protobuf:"bytes,6,opt,name=instance_id,json=instanceId" json:"instance_id"`
	RecordName           string  `protobuf:"bytes,7,opt,name=record_name,json=recordName" json:"record_name"`
	RuntimeType          string  `protobuf:"bytes,8,opt,name=runtime_type,json=runtimeType" json:"runtime_type"`
	Format               string  `protobuf:"bytes,9,opt,name=format" json:"format"`
	StartTime            int64   `protobuf:"varint,10,req,name=start_time,json=startTime" json:"start_time"`
	EndTime              int64   `protobuf:"varint,11,req,name=end_time,json=endTime" json:"end_time"`
	ApiTime              int64   `protobuf:"varint,12,req,name=api_time,json=apiTime" json:"api_time"`
	ServiceName          string  `protobuf:"bytes,13,req,name=service_name,json=serviceName" json:"service_name"`
	PtConfigList         string  `protobuf:"bytes,14,opt,name=pt_config_list,json=ptConfigList" json:"pt_config_list"`
	GoRuntimeInfo        string  `protobuf:"bytes,34,opt,name=go_runtime_info,json=goRuntimeInfo" json:"go_runtime_info"`
	CpuLimit             int64   `protobuf:"varint,35,opt,name=cpu_limit,json=cpuLimit" json:"cpu_limit"`
	ProcessCpuUsageRatio float64 `protobuf:"fixed64,50,opt,name=process_cpu_usage_ratio,json=processCpuUsageRatio" json:"process_cpu_usage_ratio"`
	ProcessMemRssRatio   float64 `protobuf:"fixed64,51,opt,name=process_mem_rss_ratio,json=processMemRssRatio" json:"process_mem_rss_ratio"`
}

func (m *UploadInfo) Reset()         { *m = UploadInfo{} }
func (m *UploadInfo) String() string { return proto.CompactTextString(m) }
func (*UploadInfo) ProtoMessage()    {}
func (*UploadInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_profile_bd3c6b70221d1fe2, []int{2}
}
func (m *UploadInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UploadInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UploadInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (dst *UploadInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadInfo.Merge(dst, src)
}
func (m *UploadInfo) XXX_Size() int {
	return m.Size()
}
func (m *UploadInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UploadInfo proto.InternalMessageInfo

func (m *UploadInfo) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *UploadInfo) GetProfileId() int64 {
	if m != nil {
		return m.ProfileId
	}
	return 0
}

func (m *UploadInfo) GetUploadId() string {
	if m != nil {
		return m.UploadId
	}
	return ""
}

func (m *UploadInfo) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *UploadInfo) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *UploadInfo) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *UploadInfo) GetRecordName() string {
	if m != nil {
		return m.RecordName
	}
	return ""
}

func (m *UploadInfo) GetRuntimeType() string {
	if m != nil {
		return m.RuntimeType
	}
	return ""
}

func (m *UploadInfo) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *UploadInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *UploadInfo) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *UploadInfo) GetApiTime() int64 {
	if m != nil {
		return m.ApiTime
	}
	return 0
}

func (m *UploadInfo) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *UploadInfo) GetPtConfigList() string {
	if m != nil {
		return m.PtConfigList
	}
	return ""
}

func (m *UploadInfo) GetGoRuntimeInfo() string {
	if m != nil {
		return m.GoRuntimeInfo
	}
	return ""
}

func (m *UploadInfo) GetCpuLimit() int64 {
	if m != nil {
		return m.CpuLimit
	}
	return 0
}

func (m *UploadInfo) GetProcessCpuUsageRatio() float64 {
	if m != nil {
		return m.ProcessCpuUsageRatio
	}
	return 0
}

func (m *UploadInfo) GetProcessMemRssRatio() float64 {
	if m != nil {
		return m.ProcessMemRssRatio
	}
	return 0
}

func init() {
	proto.RegisterType((*ProfileInfo)(nil), "profile_models.ProfileInfo")
	proto.RegisterType((*DataWrapper)(nil), "profile_models.DataWrapper")
	proto.RegisterType((*UploadInfo)(nil), "profile_models.UploadInfo")
}
func (m *ProfileInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ProfileInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.UploadInfo == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("upload_info")
	} else {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfile(dAtA, i, uint64(m.UploadInfo.Size()))
		n1, err := m.UploadInfo.MarshalTo(dAtA[i:])
		if err != nil {
			return 0, err
		}
		i += n1
	}
	if m.Data != nil {
		dAtA[i] = 0xa2
		i++
		dAtA[i] = 0x6
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	if len(m.MultiData) > 0 {
		for _, b := range m.MultiData {
			dAtA[i] = 0xaa
			i++
			dAtA[i] = 0x6
			i++
			i = encodeVarintProfile(dAtA, i, uint64(len(b)))
			i += copy(dAtA[i:], b)
		}
	}
	return i, nil
}

func (m *DataWrapper) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DataWrapper) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Data != nil {
		dAtA[i] = 0xa
		i++
		i = encodeVarintProfile(dAtA, i, uint64(len(m.Data)))
		i += copy(dAtA[i:], m.Data)
	}
	dAtA[i] = 0x12
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.ProfileType)))
	i += copy(dAtA[i:], m.ProfileType)
	dAtA[i] = 0x1a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.SampleMethod)))
	i += copy(dAtA[i:], m.SampleMethod)
	return i, nil
}

func (m *UploadInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UploadInfo) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	dAtA[i] = 0xa
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.AppId)))
	i += copy(dAtA[i:], m.AppId)
	dAtA[i] = 0x10
	i++
	i = encodeVarintProfile(dAtA, i, uint64(m.ProfileId))
	dAtA[i] = 0x1a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.UploadId)))
	i += copy(dAtA[i:], m.UploadId)
	dAtA[i] = 0x22
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.Hostname)))
	i += copy(dAtA[i:], m.Hostname)
	dAtA[i] = 0x2a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.ContainerId)))
	i += copy(dAtA[i:], m.ContainerId)
	dAtA[i] = 0x32
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.InstanceId)))
	i += copy(dAtA[i:], m.InstanceId)
	dAtA[i] = 0x3a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.RecordName)))
	i += copy(dAtA[i:], m.RecordName)
	dAtA[i] = 0x42
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.RuntimeType)))
	i += copy(dAtA[i:], m.RuntimeType)
	dAtA[i] = 0x4a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.Format)))
	i += copy(dAtA[i:], m.Format)
	dAtA[i] = 0x50
	i++
	i = encodeVarintProfile(dAtA, i, uint64(m.StartTime))
	dAtA[i] = 0x58
	i++
	i = encodeVarintProfile(dAtA, i, uint64(m.EndTime))
	dAtA[i] = 0x60
	i++
	i = encodeVarintProfile(dAtA, i, uint64(m.ApiTime))
	dAtA[i] = 0x6a
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.ServiceName)))
	i += copy(dAtA[i:], m.ServiceName)
	dAtA[i] = 0x72
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.PtConfigList)))
	i += copy(dAtA[i:], m.PtConfigList)
	dAtA[i] = 0x92
	i++
	dAtA[i] = 0x2
	i++
	i = encodeVarintProfile(dAtA, i, uint64(len(m.GoRuntimeInfo)))
	i += copy(dAtA[i:], m.GoRuntimeInfo)
	dAtA[i] = 0x98
	i++
	dAtA[i] = 0x2
	i++
	i = encodeVarintProfile(dAtA, i, uint64(m.CpuLimit))
	dAtA[i] = 0x91
	i++
	dAtA[i] = 0x3
	i++
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.ProcessCpuUsageRatio))))
	i += 8
	dAtA[i] = 0x99
	i++
	dAtA[i] = 0x3
	i++
	encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.ProcessMemRssRatio))))
	i += 8
	return i, nil
}

func encodeVarintProfile(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ProfileInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UploadInfo != nil {
		l = m.UploadInfo.Size()
		n += 1 + l + sovProfile(uint64(l))
	}
	if m.Data != nil {
		l = len(m.Data)
		n += 2 + l + sovProfile(uint64(l))
	}
	if len(m.MultiData) > 0 {
		for _, b := range m.MultiData {
			l = len(b)
			n += 2 + l + sovProfile(uint64(l))
		}
	}
	return n
}

func (m *DataWrapper) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Data != nil {
		l = len(m.Data)
		n += 1 + l + sovProfile(uint64(l))
	}
	l = len(m.ProfileType)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.SampleMethod)
	n += 1 + l + sovProfile(uint64(l))
	return n
}

func (m *UploadInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AppId)
	n += 1 + l + sovProfile(uint64(l))
	n += 1 + sovProfile(uint64(m.ProfileId))
	l = len(m.UploadId)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.Hostname)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.ContainerId)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.InstanceId)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.RecordName)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.RuntimeType)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.Format)
	n += 1 + l + sovProfile(uint64(l))
	n += 1 + sovProfile(uint64(m.StartTime))
	n += 1 + sovProfile(uint64(m.EndTime))
	n += 1 + sovProfile(uint64(m.ApiTime))
	l = len(m.ServiceName)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.PtConfigList)
	n += 1 + l + sovProfile(uint64(l))
	l = len(m.GoRuntimeInfo)
	n += 2 + l + sovProfile(uint64(l))
	n += 2 + sovProfile(uint64(m.CpuLimit))
	n += 10
	n += 10
	return n
}

func sovProfile(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozProfile(x uint64) (n int) {
	return sovProfile(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ProfileInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ProfileInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ProfileInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + msglen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UploadInfo == nil {
				m.UploadInfo = &UploadInfo{}
			}
			if err := m.UploadInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 100:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 101:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MultiData", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MultiData = append(m.MultiData, make([]byte, postIndex-iNdEx))
			copy(m.MultiData[len(m.MultiData)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("upload_info")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("data")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DataWrapper) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DataWrapper: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DataWrapper: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + byteLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfileType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SampleMethod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SampleMethod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("data")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("profile_type")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("sample_method")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UploadInfo) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UploadInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UploadInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileId", wireType)
			}
			m.ProfileId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ProfileId |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UploadId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UploadId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hostname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hostname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContainerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContainerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstanceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstanceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RecordName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RecordName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RuntimeType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RuntimeType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Format", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Format = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTime", wireType)
			}
			m.StartTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000008)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndTime", wireType)
			}
			m.EndTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.EndTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000010)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiTime", wireType)
			}
			m.ApiTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApiTime |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			hasFields[0] |= uint64(0x00000020)
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ServiceName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ServiceName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000040)
		case 14:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PtConfigList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PtConfigList = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 34:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field GoRuntimeInfo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= (uint64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthProfile
			}
			postIndex := iNdEx + intStringLen
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.GoRuntimeInfo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 35:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CpuLimit", wireType)
			}
			m.CpuLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CpuLimit |= (int64(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 50:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessCpuUsageRatio", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.ProcessCpuUsageRatio = float64(math.Float64frombits(v))
		case 51:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProcessMemRssRatio", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.ProcessMemRssRatio = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipProfile(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthProfile
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("app_id")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("profile_id")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("upload_id")
	}
	if hasFields[0]&uint64(0x00000008) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("start_time")
	}
	if hasFields[0]&uint64(0x00000010) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("end_time")
	}
	if hasFields[0]&uint64(0x00000020) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("api_time")
	}
	if hasFields[0]&uint64(0x00000040) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("service_name")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipProfile(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowProfile
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowProfile
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			iNdEx += length
			if length < 0 {
				return 0, ErrInvalidLengthProfile
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowProfile
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipProfile(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthProfile = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowProfile   = fmt.Errorf("proto: integer overflow")
)

func init() { proto.RegisterFile("profile.proto", fileDescriptor_profile_bd3c6b70221d1fe2) }

var fileDescriptor_profile_bd3c6b70221d1fe2 = []byte{
	// 584 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x3d, 0x6f, 0x13, 0x31,
	0x1c, 0xc6, 0x73, 0xe9, 0x5b, 0xf2, 0xbf, 0x4b, 0x91, 0x2c, 0x10, 0x27, 0x5e, 0xd2, 0x6b, 0x0a,
	0x6a, 0x40, 0x28, 0x43, 0x19, 0x18, 0x2a, 0x31, 0xb4, 0x2c, 0x91, 0x5a, 0x84, 0xa2, 0x56, 0x8c,
	0x96, 0x39, 0x3b, 0xa9, 0xa5, 0xf8, 0x6c, 0xd9, 0x3e, 0xa4, 0x8a, 0x91, 0x2f, 0xc0, 0xc7, 0xea,
	0xd8, 0x81, 0x81, 0x09, 0xa1, 0xf6, 0x8b, 0x20, 0xfb, 0x7c, 0xa9, 0x0b, 0x53, 0x2e, 0xcf, 0xf3,
	0x7b, 0xfc, 0x7f, 0x91, 0x0d, 0x03, 0xa5, 0xe5, 0x9c, 0x2f, 0xd9, 0x44, 0x69, 0x69, 0x25, 0xda,
	0x0e, 0x7f, 0xb1, 0x90, 0x94, 0x2d, 0xcd, 0xe8, 0x7b, 0x02, 0xe9, 0xa7, 0x46, 0x9a, 0x56, 0x73,
	0x89, 0x0e, 0x21, 0xad, 0xd5, 0x52, 0x12, 0x8a, 0x79, 0x35, 0x97, 0x79, 0x52, 0x74, 0xc7, 0xe9,
	0xc1, 0x93, 0xc9, 0xfd, 0xd4, 0xe4, 0xdc, 0x23, 0x2e, 0x30, 0x83, 0x7a, 0xf5, 0x8d, 0x72, 0x58,
	0xa7, 0xc4, 0x92, 0x9c, 0x16, 0xdd, 0x71, 0x76, 0xb4, 0x7e, 0xf5, 0x7b, 0xa7, 0x33, 0xf3, 0x0a,
	0x7a, 0x0e, 0x20, 0xea, 0xa5, 0xe5, 0xd8, 0xfb, 0xac, 0x58, 0x1b, 0x67, 0xb3, 0xbe, 0x57, 0x3e,
	0x10, 0x4b, 0x46, 0xdf, 0x20, 0x75, 0xbf, 0x9f, 0x35, 0x51, 0x8a, 0xe9, 0xd5, 0x39, 0xc9, 0x7f,
	0xe7, 0xec, 0x43, 0xd6, 0xb6, 0x62, 0x2f, 0x15, 0xcb, 0xbb, 0x45, 0x77, 0xdc, 0x0f, 0x44, 0x1a,
	0x9c, 0xb3, 0x4b, 0xc5, 0xd0, 0x2b, 0x18, 0x18, 0x22, 0x94, 0x6b, 0x99, 0xd9, 0x0b, 0x49, 0xf3,
	0xb5, 0x88, 0xcc, 0x1a, 0xeb, 0xd4, 0x3b, 0xa3, 0x9f, 0x1b, 0x00, 0x77, 0x03, 0xa1, 0xa7, 0xb0,
	0x49, 0x94, 0xc2, 0x9c, 0xfa, 0xf2, 0x6d, 0x64, 0x83, 0x28, 0x35, 0xa5, 0x68, 0x0f, 0xa0, 0xad,
	0xcf, 0xa9, 0xaf, 0xbe, 0x16, 0x80, 0x7e, 0xd0, 0xa7, 0x14, 0xed, 0x42, 0xbf, 0xdd, 0xe1, 0xfd,
	0xba, 0xbd, 0xb0, 0x2b, 0x8a, 0x0a, 0xe8, 0x5d, 0x48, 0x63, 0x2b, 0x22, 0x58, 0xbe, 0x5e, 0x24,
	0x77, 0x44, 0xab, 0xba, 0x49, 0x4b, 0x59, 0x59, 0xc2, 0x2b, 0xa6, 0xdd, 0x39, 0x1b, 0x11, 0x95,
	0xae, 0x9c, 0x29, 0x45, 0x2f, 0x21, 0xe5, 0x95, 0xb1, 0xa4, 0x2a, 0x7d, 0x4f, 0x9b, 0x11, 0x07,
	0xad, 0xd1, 0x60, 0x9a, 0x95, 0x52, 0x53, 0xec, 0x8b, 0x6e, 0xc5, 0x58, 0x63, 0x7c, 0x0c, 0x65,
	0x75, 0x5d, 0x59, 0x2e, 0xc2, 0x82, 0x7b, 0x71, 0xd9, 0xe0, 0xf8, 0x05, 0x3f, 0x83, 0xcd, 0xb9,
	0xd4, 0x82, 0xd8, 0xbc, 0x1f, 0x21, 0x41, 0x73, 0x7b, 0x32, 0x96, 0x68, 0x8b, 0x1d, 0x9f, 0x43,
	0xbc, 0x27, 0xaf, 0x9f, 0x71, 0xc1, 0xd0, 0x0e, 0xf4, 0x58, 0x45, 0x1b, 0x24, 0x8d, 0x90, 0x2d,
	0x56, 0xd1, 0x16, 0x20, 0x8a, 0x37, 0x40, 0x16, 0x03, 0x44, 0x71, 0x0f, 0xec, 0x43, 0x66, 0x98,
	0xfe, 0xca, 0x4b, 0xd6, 0x4c, 0x35, 0x88, 0xaf, 0x43, 0x70, 0xfc, 0x58, 0xaf, 0x61, 0x5b, 0x59,
	0x5c, 0xca, 0x6a, 0xce, 0x17, 0x78, 0xc9, 0x8d, 0xcd, 0xb7, 0xa3, 0xae, 0x33, 0x65, 0x8f, 0xbd,
	0x75, 0xc2, 0x8d, 0x45, 0x6f, 0xe0, 0xc1, 0x42, 0xe2, 0x76, 0x0b, 0xfe, 0x19, 0x8c, 0x22, 0x78,
	0xb0, 0x90, 0xb3, 0xc6, 0xf3, 0xd7, 0x65, 0x17, 0xfa, 0xa5, 0xaa, 0xf1, 0x92, 0x0b, 0x6e, 0xf3,
	0xbd, 0x22, 0x59, 0x35, 0xd9, 0x2b, 0x55, 0x7d, 0xe2, 0x54, 0x74, 0x08, 0x8f, 0x95, 0x96, 0x25,
	0x33, 0x06, 0x3b, 0xb4, 0x36, 0x64, 0xc1, 0xb0, 0x26, 0x96, 0xcb, 0xfc, 0xa0, 0x48, 0xc6, 0x49,
	0x08, 0x3c, 0x0c, 0xd0, 0xb1, 0xaa, 0xcf, 0x1d, 0x32, 0x73, 0x04, 0x7a, 0x07, 0x8f, 0xda, 0xb0,
	0x60, 0x02, 0x6b, 0x63, 0x42, 0xf4, 0x6d, 0x14, 0x45, 0x01, 0x39, 0x65, 0x62, 0x66, 0x8c, 0x0f,
	0x1e, 0xbd, 0xbf, 0xba, 0x19, 0x26, 0xd7, 0x37, 0xc3, 0xe4, 0xcf, 0xcd, 0x30, 0xf9, 0x71, 0x3b,
	0xec, 0x5c, 0xdf, 0x0e, 0x3b, 0xbf, 0x6e, 0x87, 0x1d, 0x78, 0x51, 0x4a, 0x31, 0xf9, 0x72, 0x69,
	0x19, 0x75, 0x77, 0xc3, 0x7f, 0x11, 0x25, 0xfe, 0x79, 0xe3, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x27, 0x90, 0x8a, 0x61, 0x39, 0x04, 0x00, 0x00,
}
